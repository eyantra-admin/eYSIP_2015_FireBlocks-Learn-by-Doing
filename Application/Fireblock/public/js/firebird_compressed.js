// Do not edit this file; automatically generated by build.py.
"use strict";

Blockly.Firebird=new Blockly.Generator("Firebird");Blockly.Firebird.addReservedWords("port_config,init,if,else,for,switch,case,while,do,break,continue,return,goto,define,include,HIGH,LOW,INPUT,OUTPUT,INPUT_PULLUP,true,false,interger, constants,floating,point,void,bookean,char,unsigned,byte,int,word,long,float,double,string,String,array,static, volatile,const,sizeof,pinMode,digitalWrite,digitalRead,analogReference,analogRead,analogWrite,tone,noTone,shiftOut,shitIn,pulseIn,millis,micros,delay,delayMicroseconds,min,max,abs,constrain,map,pow,sqrt,sin,cos,tan,randomSeed,random,lowByte,highByte,bitRead,bitWrite,bitSet,bitClear,bit,attachInterrupt,detachInterrupt,interrupts,noInterrupts");
Blockly.Firebird.ORDER_ATOMIC=0;Blockly.Firebird.ORDER_UNARY_POSTFIX=1;Blockly.Firebird.ORDER_UNARY_PREFIX=2;Blockly.Firebird.ORDER_MULTIPLICATIVE=3;Blockly.Firebird.ORDER_ADDITIVE=4;Blockly.Firebird.ORDER_SHIFT=5;Blockly.Firebird.ORDER_RELATIONAL=6;Blockly.Firebird.ORDER_EQUALITY=7;Blockly.Firebird.ORDER_BITWISE_AND=8;Blockly.Firebird.ORDER_BITWISE_XOR=9;Blockly.Firebird.ORDER_BITWISE_OR=10;Blockly.Firebird.ORDER_LOGICAL_AND=11;Blockly.Firebird.ORDER_LOGICAL_OR=12;
Blockly.Firebird.ORDER_CONDITIONAL=13;Blockly.Firebird.ORDER_ASSIGNMENT=14;Blockly.Firebird.ORDER_NONE=99;
Blockly.Firebird.init=function(a){Blockly.Firebird.definitions_=Object.create(null);Blockly.Firebird.setups_=Object.create(null);Blockly.Firebird.variableDB_?Blockly.Firebird.variableDB_.reset():Blockly.Firebird.variableDB_=new Blockly.Names(Blockly.Firebird.RESERVED_WORDS_);var b=[];a=Blockly.Variables.allVariables(a);for(var c=0;c<a.length;c++)b[c]="  int "+Blockly.Firebird.variableDB_.getName(a[c],Blockly.Variables.NAME_TYPE)+";\n";Blockly.Firebird.definitions_.variables=b.join("\n")};
Blockly.Firebird.finish=function(a){a="  "+a.replace(/\n/g,"\n  ");a=a.replace(/\n\s+$/,"\n");var b=[],c=[],d=[],e;for(e in Blockly.Firebird.definitions_){var g=Blockly.Firebird.definitions_[e];g.match(/^#include/)?b.push(g):"variables"===e?c.push(g):d.push(g)}return'#include"firebird.h"\n'+(b.join("\n")+"\n\n"+d.join("\n")).replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+"void main() {\n  init_devices();\n"+c.join("\n")+a+"\n}"};Blockly.Firebird.scrubNakedValue=function(a){return a+";\n"};
Blockly.Firebird.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/\$/g,"\\$").replace(/'/g,"\\'");return'"'+a+'"'};
Blockly.Firebird.scrub_=function(a,b){if(null===b)return"";var c="";if(!a.outputConnection||!a.outputConnection.targetConnection){var d=a.getCommentText();d&&(c+=Blockly.Firebird.prefixLines(d,"// ")+"\n");for(var e=0;e<a.inputList.length;e++)a.inputList[e].type==Blockly.INPUT_VALUE&&(d=a.inputList[e].connection.targetBlock())&&(d=Blockly.Firebird.allNestedComments(d))&&(c+=Blockly.Firebird.prefixLines(d,"// "))}e=a.nextConnection&&a.nextConnection.targetBlock();e=Blockly.Firebird.blockToCode(e);
return c+b+e};Blockly.Firebird.display={};Blockly.Firebird.display_init=function(a){return"LCD_init();\n lcd_set_4_bit();\n"};Blockly.Firebird.display_cursor=function(a){var b=a.getFieldValue("position"),c;a=Blockly.Firebird.valueToCode(a,"Cursor",Blockly.Firebird.ORDER_MULTIPLICATIVE)||"0";switch(b){case "row":c="row_pos= "+a+";\n";break;case "column":c="column_pos= "+a+";\n"}return c};
Blockly.Firebird.display_channel=function(a){var b;a=Blockly.Firebird.valueToCode(a,"Channel",Blockly.Firebird.ORDER_ATOMIC)||"0";switch(a){case "0":b="Block not connected to display value of()";break;case "ADC_Conversion(2)":b="C= "+a+";\nlcd_print(row_pos,column_pos,C,3);\n";break;case "ADC_Conversion(3)":b="L= "+a+";\nlcd_print(row_pos,column_pos,L,3);\n";break;case "ADC_Conversion(1)":b="R= "+a+";\nlcd_print(row_pos,column_pos,R,3);\n";break;case "ADC_Conversion(4)":b="ir1= "+a+";\nlcd_print(row_pos,column_pos,ir1,3);\n";
break;case "ADC_Conversion(5)":b="ir2= "+a+";\nlcd_print(row_pos,column_pos,ir2,3);\n";break;case "ADC_Conversion(6)":b="ir3= "+a+";\nlcd_print(row_pos,column_pos,ir3,3);\n";break;case "ADC_Conversion(7)":b="ir4= "+a+";\nlcd_print(row_pos,column_pos,ir4,3);\n";break;case "ADC_Conversion(8)":b="ir5= "+a+";\nlcd_print(row_pos,column_pos,ir5,3);\n";break;case "spi_master_tx_and_rx(5)":b="ir6= "+a+";\nlcd_print(row_pos,column_pos,ir6,3);\n";break;case "spi_master_tx_and_rx(6)":b="ir7= "+a+";\nlcd_print(row_pos,column_pos,ir7,3);\n";
break;case "spi_master_tx_and_rx(7)":b="ir8= "+a+";\nlcd_print(row_pos,column_pos,ir8,3);\n";break;case "sharp_fr(9)":b="sharp1= "+a+";\nlcd_print(row_pos,column_pos,sharp1,3);\n";break;case "sharp_fr(10)":b="sharp2= "+a+";\nlcd_print(row_pos,column_pos,sharp2,3);\n";break;case "sharp_fr(11)":b="sharp3= "+a+";\nlcd_print(row_pos,column_pos,sharp3,3);\n";break;case "sharp_fr(12)":b="sharp4= "+a+";\nlcd_print(row_pos,column_pos,sharp4,3);\n";break;case "sharp_fr(13)":b="sharp5= "+a+";\nlcd_print(row_pos,column_pos,sharp5,3);\n"}return b};
Blockly.Firebird.logic_compare1=function(a){var b={EQ:"==",NE:"!=",LT:"<",LE:"<=",GT:">",GE:">="}[a.getFieldValue("OP")],c=Blockly.Firebird.valueToCode(a,"A",Blockly.Firebird.ORDER_MULTIPLICATIVE)||"0";a=Blockly.Firebird.valueToCode(a,"B",Blockly.Firebird.ORDER_MULTIPLICATIVE)||"0";return[c+" "+b+" "+a,Blockly.Firebird.ORDER_MULTIPLICATIVE]};Blockly.Firebird.input={};Blockly.Firebird.io_buzzer=function(a){return["buzzer_ms("+(Blockly.Firebird.valueToCode(a,"buzzer",Blockly.Firebird.ORDER_MULTIPLICATIVE)||"0")+");\n",Blockly.Firebird.ORDER_ATOMIC]};Blockly.Firebird.io_switch=function(a){return["("+a.getFieldValue("status")+");\n",Blockly.Firebird.ORDER_ATOMIC]};
// Copyright 2014 Google Inc.  Apache License 2.0
Blockly.Firebird.logic={};Blockly.Firebird.controls_if=function(a){for(var b=0,c=Blockly.Firebird.valueToCode(a,"IF"+b,Blockly.Firebird.ORDER_NONE)||"false",d=Blockly.Firebird.statementToCode(a,"DO"+b),e="if ("+c+") {\n"+d+"}",b=1;b<=a.elseifCount_;b++)c=Blockly.Firebird.valueToCode(a,"IF"+b,Blockly.Firebird.ORDER_NONE)||"false",d=Blockly.Firebird.statementToCode(a,"DO"+b),e+=" else if ("+c+") {\n"+d+"}";a.elseCount_&&(d=Blockly.Firebird.statementToCode(a,"ELSE"),e+=" else {\n"+d+"}");return e+"\n"};
Blockly.Firebird.logic_compare=function(a){var b={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="}[a.getFieldValue("OP")],c="=="==b||"!="==b?Blockly.Firebird.ORDER_EQUALITY:Blockly.Firebird.ORDER_RELATIONAL,d=Blockly.Firebird.valueToCode(a,"A",c)||"0";a=Blockly.Firebird.valueToCode(a,"B",c)||"0";return[d+" "+b+" "+a,c]};
Blockly.Firebird.logic_operation=function(a){var b="AND"==a.getFieldValue("OP")?"&&":"||",c="&&"==b?Blockly.Firebird.ORDER_LOGICAL_AND:Blockly.Firebird.ORDER_LOGICAL_OR,d=Blockly.Firebird.valueToCode(a,"A",c);a=Blockly.Firebird.valueToCode(a,"B",c);if(d||a){var e="&&"==b?"true":"false";d||(d=e);a||(a=e)}else a=d="false";return[d+" "+b+" "+a,c]};Blockly.Firebird.logic_negate=function(a){var b=Blockly.Firebird.ORDER_UNARY_PREFIX;return["!"+(Blockly.Firebird.valueToCode(a,"BOOL",b)||"true"),b]};
Blockly.Firebird.logic_boolean=function(a){return["TRUE"==a.getFieldValue("BOOL")?"1":"0",Blockly.Firebird.ORDER_ATOMIC]};Blockly.Firebird.logic_null=function(a){return["null",Blockly.Firebird.ORDER_ATOMIC]};
Blockly.Firebird.logic_ternary=function(a){var b=Blockly.Firebird.valueToCode(a,"IF",Blockly.Firebird.ORDER_CONDITIONAL)||"false",c=Blockly.Firebird.valueToCode(a,"THEN",Blockly.Firebird.ORDER_CONDITIONAL)||"null";a=Blockly.Firebird.valueToCode(a,"ELSE",Blockly.Firebird.ORDER_CONDITIONAL)||"null";return[b+" ? "+c+" : "+a,Blockly.Firebird.ORDER_CONDITIONAL]};
Blockly.Firebird.delay_ms=function(a){return"_delay_ms("+(Blockly.Firebird.valueToCode(a,"delay_value",Blockly.Firebird.ORDER_NONE)||"1000")+");\n"};Blockly.Firebird.buzzer_on=function(a){return"buzzer_on();\n"};Blockly.Firebird.buzzer_off=function(a){return"buzzer_off();\n"};
// Copyright 2014 Google Inc.  Apache License 2.0
Blockly.Firebird.loops={};Blockly.Firebird.controls_repeat=function(a){var b=Number(a.getFieldValue("TIMES")),c=Blockly.Firebird.statementToCode(a,"DO"),c=Blockly.Firebird.addLoopTrap(c,a.id);a=Blockly.Firebird.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE);return"for (int "+a+" = 0; "+a+" < "+b+"; "+a+"++) {\n"+c+"}\n"};
Blockly.Firebird.controls_repeat_ext=function(a){var b=Blockly.Firebird.valueToCode(a,"TIMES",Blockly.Firebird.ORDER_ASSIGNMENT)||"0",c=Blockly.Firebird.statementToCode(a,"DO"),c=Blockly.Firebird.addLoopTrap(c,a.id);a="";var d=Blockly.Firebird.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE),e=b;b.match(/^\w+$/)||Blockly.isNumber(b)||(e=Blockly.Firebird.variableDB_.getDistinctName("repeat_end",Blockly.Variables.NAME_TYPE),a+="var "+e+" = "+b+";\n");return a+("for (int "+d+" = 0; "+
d+" < "+e+"; "+d+"++) {\n"+c+"}\n")};Blockly.Firebird.controls_whileUntil=function(a){var b="UNTIL"==a.getFieldValue("MODE"),c=Blockly.Firebird.valueToCode(a,"BOOL",b?Blockly.Firebird.ORDER_UNARY_PREFIX:Blockly.Firebird.ORDER_NONE)||"0",d=Blockly.Firebird.statementToCode(a,"DO"),d=Blockly.Firebird.addLoopTrap(d,a.id);b&&(c="!"+c);return"while ("+c+") {\n"+d+"}\n"};
Blockly.Firebird.controls_for=function(a){var b=Blockly.Firebird.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.Firebird.valueToCode(a,"FROM",Blockly.Firebird.ORDER_ASSIGNMENT)||"0",d=Blockly.Firebird.valueToCode(a,"TO",Blockly.Firebird.ORDER_ASSIGNMENT)||"0",e=Blockly.Firebird.valueToCode(a,"BY",Blockly.Firebird.ORDER_ASSIGNMENT)||"1",g=Blockly.Firebird.statementToCode(a,"DO"),g=Blockly.Firebird.addLoopTrap(g,a.id);if(Blockly.isNumber(c)&&Blockly.isNumber(d)&&Blockly.isNumber(e)){var f=
parseFloat(c)<=parseFloat(d);a="for ("+b+" = "+c+"; "+b+(f?" <= ":" >= ")+d+"; "+b;b=Math.abs(parseFloat(e));a=(1==b?a+(f?"++":"--"):a+((f?" += ":" -= ")+b))+(") {\n"+g+"}\n")}else a="",f=c,c.match(/^\w+$/)||Blockly.isNumber(c)||(f=Blockly.Firebird.variableDB_.getDistinctName(b+"_start",Blockly.Variables.NAME_TYPE),a+="var "+f+" = "+c+";\n"),c=d,d.match(/^\w+$/)||Blockly.isNumber(d)||(c=Blockly.Firebird.variableDB_.getDistinctName(b+"_end",Blockly.Variables.NAME_TYPE),a+="var "+c+" = "+d+";\n"),d=
Blockly.Firebird.variableDB_.getDistinctName(b+"_inc",Blockly.Variables.NAME_TYPE),a+="num "+d+" = ",a=Blockly.isNumber(e)?a+(Math.abs(e)+";\n"):a+("("+e+").abs();\n"),a+="if ("+f+" > "+c+") {\n",a+=Blockly.Firebird.INDENT+d+" = -"+d+";\n",a+="}\n",a+="for ("+b+" = "+f+";\n     "+d+" >= 0 ? "+b+" <= "+c+" : "+b+" >= "+c+";\n     "+b+" += "+d+") {\n"+g+"}\n";return a};
Blockly.Firebird.controls_forEach=function(a){var b=Blockly.Firebird.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.Firebird.valueToCode(a,"LIST",Blockly.Firebird.ORDER_ASSIGNMENT)||"[]",d=Blockly.Firebird.statementToCode(a,"DO"),d=Blockly.Firebird.addLoopTrap(d,a.id);return"for (var "+b+" in  "+c+") {\n"+d+"}\n"};
Blockly.Firebird.controls_flow_statements=function(a){switch(a.getFieldValue("FLOW")){case "BREAK":return"break;\n";case "CONTINUE":return"continue;\n"}throw"Unknown flow statement.";};
// Copyright 2014 Google Inc.  Apache License 2.0
Blockly.Firebird.math={};Blockly.Firebird.addReservedWords("Math");Blockly.Firebird.math_number=function(a){a=window.parseFloat(a.getFieldValue("NUM"));return[a,0>a?Blockly.Firebird.ORDER_UNARY_PREFIX:Blockly.Firebird.ORDER_ATOMIC]};
Blockly.Firebird.math_arithmetic=function(a){var b={ADD:[" + ",Blockly.Firebird.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Firebird.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Firebird.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Firebird.ORDER_MULTIPLICATIVE],POWER:[null,Blockly.Firebird.ORDER_NONE]}[a.getFieldValue("OP")],c=b[0],b=b[1],d=Blockly.Firebird.valueToCode(a,"A",b)||"0";a=Blockly.Firebird.valueToCode(a,"B",b)||"0";return c?[d+c+a,b]:(Blockly.Firebird.definitions_.import_Firebird_math="import 'Firebird:math' as Math;",
["Math.pow("+d+", "+a+")",Blockly.Firebird.ORDER_UNARY_POSTFIX])};
Blockly.Firebird.math_single=function(a){var b=a.getFieldValue("OP"),c;if("NEG"==b)return a=Blockly.Firebird.valueToCode(a,"NUM",Blockly.Firebird.ORDER_UNARY_PREFIX)||"0","-"==a[0]&&(a=" "+a),["-"+a,Blockly.Firebird.ORDER_UNARY_PREFIX];Blockly.Firebird.definitions_.import_Firebird_math="import 'Firebird:math' as Math;";a="ABS"==b||"ROUND"==b.substring(0,5)?Blockly.Firebird.valueToCode(a,"NUM",Blockly.Firebird.ORDER_UNARY_POSTFIX)||"0":"SIN"==b||"COS"==b||"TAN"==b?Blockly.Firebird.valueToCode(a,"NUM",
Blockly.Firebird.ORDER_MULTIPLICATIVE)||"0":Blockly.Firebird.valueToCode(a,"NUM",Blockly.Firebird.ORDER_NONE)||"0";switch(b){case "ABS":c=a+".abs()";break;case "ROOT":c="Math.sqrt("+a+")";break;case "LN":c="Math.log("+a+")";break;case "EXP":c="Math.exp("+a+")";break;case "POW10":c="Math.pow(10,"+a+")";break;case "ROUND":c=a+".round()";break;case "ROUNDUP":c=a+".ceil()";break;case "ROUNDDOWN":c=a+".floor()";break;case "SIN":c="Math.sin("+a+" / 180 * Math.PI)";break;case "COS":c="Math.cos("+a+" / 180 * Math.PI)";
break;case "TAN":c="Math.tan("+a+" / 180 * Math.PI)"}if(c)return[c,Blockly.Firebird.ORDER_UNARY_POSTFIX];switch(b){case "LOG10":c="Math.log("+a+") / Math.log(10)";break;case "ASIN":c="Math.asin("+a+") / Math.PI * 180";break;case "ACOS":c="Math.acos("+a+") / Math.PI * 180";break;case "ATAN":c="Math.atan("+a+") / Math.PI * 180";break;default:throw"Unknown math operator: "+b;}return[c,Blockly.Firebird.ORDER_MULTIPLICATIVE]};
Blockly.Firebird.math_constant=function(a){var b={PI:["Math.PI",Blockly.Firebird.ORDER_UNARY_POSTFIX],E:["Math.E",Blockly.Firebird.ORDER_UNARY_POSTFIX],GOLDEN_RATIO:["(1 + Math.sqrt(5)) / 2",Blockly.Firebird.ORDER_MULTIPLICATIVE],SQRT2:["Math.SQRT2",Blockly.Firebird.ORDER_UNARY_POSTFIX],SQRT1_2:["Math.SQRT1_2",Blockly.Firebird.ORDER_UNARY_POSTFIX],INFINITY:["double.INFINITY",Blockly.Firebird.ORDER_ATOMIC]};a=a.getFieldValue("CONSTANT");"INFINITY"!=a&&(Blockly.Firebird.definitions_.import_Firebird_math=
"import 'Firebird:math' as Math;");return b[a]};
Blockly.Firebird.math_number_property=function(a){var b=Blockly.Firebird.valueToCode(a,"NUMBER_TO_CHECK",Blockly.Firebird.ORDER_MULTIPLICATIVE);if(!b)return["false",Blockly.Python.ORDER_ATOMIC];var c=a.getFieldValue("PROPERTY"),d;if("PRIME"==c)return Blockly.Firebird.definitions_.import_Firebird_math="import 'Firebird:math' as Math;",d=Blockly.Firebird.provideFunction_("math_isPrime",["bool "+Blockly.Firebird.FUNCTION_NAME_PLACEHOLDER_+"(n) {","  // https://en.wikipedia.org/wiki/Primality_test#Naive_methods","  if (n == 2 || n == 3) {",
"    return true;","  }","  // False if n is null, negative, is 1, or not whole.","  // And false if n is divisible by 2 or 3.","  if (n == null || n <= 1 || n % 1 != 0 || n % 2 == 0 || n % 3 == 0) {","    return false;","  }","  // Check all the numbers of form 6k +/- 1, up to sqrt(n).","  for (var x = 6; x <= Math.sqrt(n) + 1; x += 6) {","    if (n % (x - 1) == 0 || n % (x + 1) == 0) {","      return false;","    }","  }","  return true;","}"])+"("+b+")",[d,Blockly.Firebird.ORDER_UNARY_POSTFIX];
switch(c){case "EVEN":d=b+" % 2 == 0";break;case "ODD":d=b+" % 2 == 1";break;case "WHOLE":d=b+" % 1 == 0";break;case "POSITIVE":d=b+" > 0";break;case "NEGATIVE":d=b+" < 0";break;case "DIVISIBLE_BY":a=Blockly.Firebird.valueToCode(a,"DIVISOR",Blockly.Firebird.ORDER_MULTIPLICATIVE);if(!a)return["false",Blockly.Python.ORDER_ATOMIC];d=b+" % "+a+" == 0"}return[d,Blockly.Firebird.ORDER_EQUALITY]};
Blockly.Firebird.math_change=function(a){var b=Blockly.Firebird.valueToCode(a,"DELTA",Blockly.Firebird.ORDER_ADDITIVE)||"0";a=Blockly.Firebird.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);return a+" = ("+a+" is num ? "+a+" : 0) + "+b+";\n"};Blockly.Firebird.math_round=Blockly.Firebird.math_single;Blockly.Firebird.math_trig=Blockly.Firebird.math_single;
Blockly.Firebird.math_on_list=function(a){var b=a.getFieldValue("OP");a=Blockly.Firebird.valueToCode(a,"LIST",Blockly.Firebird.ORDER_NONE)||"[]";switch(b){case "SUM":b=Blockly.Firebird.provideFunction_("math_sum",["num "+Blockly.Firebird.FUNCTION_NAME_PLACEHOLDER_+"(List myList) {","  num sumVal = 0;","  myList.forEach((num entry) {sumVal += entry;});","  return sumVal;","}"]);b=b+"("+a+")";break;case "MIN":Blockly.Firebird.definitions_.import_Firebird_math="import 'Firebird:math' as Math;";b=Blockly.Firebird.provideFunction_("math_min",
["num "+Blockly.Firebird.FUNCTION_NAME_PLACEHOLDER_+"(List myList) {","  if (myList.isEmpty) return null;","  num minVal = myList[0];","  myList.forEach((num entry) {minVal = Math.min(minVal, entry);});","  return minVal;","}"]);b=b+"("+a+")";break;case "MAX":Blockly.Firebird.definitions_.import_Firebird_math="import 'Firebird:math' as Math;";b=Blockly.Firebird.provideFunction_("math_max",["num "+Blockly.Firebird.FUNCTION_NAME_PLACEHOLDER_+"(List myList) {","  if (myList.isEmpty) return null;","  num maxVal = myList[0];",
"  myList.forEach((num entry) {maxVal = Math.max(maxVal, entry);});","  return maxVal;","}"]);b=b+"("+a+")";break;case "AVERAGE":b=Blockly.Firebird.provideFunction_("math_average",["num "+Blockly.Firebird.FUNCTION_NAME_PLACEHOLDER_+"(List myList) {","  // First filter list for numbers only.","  List localList = new List.from(myList);","  localList.removeMatching((a) => a is! num);","  if (localList.isEmpty) return null;","  num sumVal = 0;","  localList.forEach((num entry) {sumVal += entry;});","  return sumVal / localList.length;",
"}"]);b=b+"("+a+")";break;case "MEDIAN":b=Blockly.Firebird.provideFunction_("math_median",["num "+Blockly.Firebird.FUNCTION_NAME_PLACEHOLDER_+"(List myList) {","  // First filter list for numbers only, then sort, then return middle value","  // or the average of two middle values if list has an even number of elements.","  List localList = new List.from(myList);","  localList.removeMatching((a) => a is! num);","  if (localList.isEmpty) return null;","  localList.sort((a, b) => (a - b));","  int index = localList.length ~/ 2;",
"  if (localList.length % 2 == 1) {","    return localList[index];","  } else {","    return (localList[index - 1] + localList[index]) / 2;","  }","}"]);b=b+"("+a+")";break;case "MODE":Blockly.Firebird.definitions_.import_Firebird_math="import 'Firebird:math' as Math;";b=Blockly.Firebird.provideFunction_("math_modes",["List "+Blockly.Firebird.FUNCTION_NAME_PLACEHOLDER_+"(List values) {","  List modes = [];","  List counts = [];","  int maxCount = 0;","  for (int i = 0; i < values.length; i++) {",
"    var value = values[i];","    bool found = false;","    int thisCount;","    for (int j = 0; j < counts.length; j++) {","      if (counts[j][0] == value) {","        thisCount = ++counts[j][1];","        found = true;","        break;","      }","    }","    if (!found) {","      counts.add([value, 1]);","      thisCount = 1;","    }","    maxCount = Math.max(thisCount, maxCount);","  }","  for (int j = 0; j < counts.length; j++) {","    if (counts[j][1] == maxCount) {","        modes.add(counts[j][0]);",
"    }","  }","  return modes;","}"]);b=b+"("+a+")";break;case "STD_DEV":Blockly.Firebird.definitions_.import_Firebird_math="import 'Firebird:math' as Math;";b=Blockly.Firebird.provideFunction_("math_standard_deviation",["num "+Blockly.Firebird.FUNCTION_NAME_PLACEHOLDER_+"(List myList) {","  // First filter list for numbers only.","  List numbers = new List.from(myList);","  numbers.removeMatching((a) => a is! num);","  if (numbers.isEmpty) return null;","  num n = numbers.length;","  num sum = 0;",
"  numbers.forEach((x) => sum += x);","  num mean = sum / n;","  num sumSquare = 0;","  numbers.forEach((x) => sumSquare += Math.pow(x - mean, 2));","  return Math.sqrt(sumSquare / n);","}"]);b=b+"("+a+")";break;case "RANDOM":Blockly.Firebird.definitions_.import_Firebird_math="import 'Firebird:math' as Math;";b=Blockly.Firebird.provideFunction_("math_random_item",["dynamic "+Blockly.Firebird.FUNCTION_NAME_PLACEHOLDER_+"(List myList) {","  int x = new Math.Random().nextInt(myList.length);","  return myList[x];",
"}"]);b=b+"("+a+")";break;default:throw"Unknown operator: "+b;}return[b,Blockly.Firebird.ORDER_UNARY_POSTFIX]};Blockly.Firebird.math_modulo=function(a){var b=Blockly.Firebird.valueToCode(a,"DIVIDEND",Blockly.Firebird.ORDER_MULTIPLICATIVE)||"0";a=Blockly.Firebird.valueToCode(a,"DIVISOR",Blockly.Firebird.ORDER_MULTIPLICATIVE)||"0";return[b+" % "+a,Blockly.Firebird.ORDER_MULTIPLICATIVE]};
Blockly.Firebird.math_constrain=function(a){Blockly.Firebird.definitions_.import_Firebird_math="import 'Firebird:math' as Math;";var b=Blockly.Firebird.valueToCode(a,"VALUE",Blockly.Firebird.ORDER_NONE)||"0",c=Blockly.Firebird.valueToCode(a,"LOW",Blockly.Firebird.ORDER_NONE)||"0";a=Blockly.Firebird.valueToCode(a,"HIGH",Blockly.Firebird.ORDER_NONE)||"double.INFINITY";return["Math.min(Math.max("+b+", "+c+"), "+a+")",Blockly.Firebird.ORDER_UNARY_POSTFIX]};
Blockly.Firebird.math_random_int=function(a){Blockly.Firebird.definitions_.import_Firebird_math="import 'Firebird:math' as Math;";var b=Blockly.Firebird.valueToCode(a,"FROM",Blockly.Firebird.ORDER_NONE)||"0";a=Blockly.Firebird.valueToCode(a,"TO",Blockly.Firebird.ORDER_NONE)||"0";return[Blockly.Firebird.provideFunction_("math_random_int",["int "+Blockly.Firebird.FUNCTION_NAME_PLACEHOLDER_+"(num a, num b) {","  if (a > b) {","    // Swap a and b to ensure a is smaller.","    num c = a;","    a = b;",
"    b = c;","  }","  return new Math.Random().nextInt(b - a + 1) + a;","}"])+"("+b+", "+a+")",Blockly.Firebird.ORDER_UNARY_POSTFIX]};Blockly.Firebird.math_random_float=function(a){Blockly.Firebird.definitions_.import_Firebird_math="import 'Firebird:math' as Math;";return["new Math.Random().nextDouble()",Blockly.Firebird.ORDER_UNARY_POSTFIX]};Blockly.Firebird.motion={};Blockly.Firebird.motion=function(a){var b;switch(a.getFieldValue("motion")){case "forward":b="forward();\n";break;case "back":b="back();\n";break;case "stop":b="stop();\n"}return b};Blockly.Firebird.turn=function(a){var b;switch(a.getFieldValue("turn")){case "right":b="right();\n";break;case "left":b="left();\n"}return b};Blockly.Firebird.soft_turn=function(a){var b;switch(a.getFieldValue("turn")){case "soft_right":b="soft_right();\n";break;case "soft_left":b="soft_left();\n"}return b};
Blockly.Firebird.back_turn=function(a){var b;switch(a.getFieldValue("turn")){case "back_right":b="soft_right_2();\n";break;case "back_left":b="soft_left_2();\n"}return b};Blockly.Firebird.motor={};Blockly.Firebird.motor_forward=function(a){return"forward();\n"};Blockly.Firebird.motor_backward=function(a){return"backward();\n"};Blockly.Firebird.motor_forward_mm=function(a){return"forward_mm("+(Blockly.Firebird.valueToCode(a,"VALUE",Blockly.Firebird.ORDER_NONE)||"1000")+");\n"};Blockly.Firebird.motor_backward_mm=function(a){return"backward_mm("+(Blockly.Firebird.valueToCode(a,"VALUE",Blockly.Firebird.ORDER_NONE)||"1000")+");\n"};Blockly.Firebird.position={};Blockly.Firebird.position_motion=function(a){var b=a.getFieldValue("forward"),c;a=Blockly.Firebird.valueToCode(a,"motion",Blockly.Firebird.ORDER_MULTIPLICATIVE)||"0";switch(b){case "fwd":c="forward_mm("+a+");\n";break;case "back":c="back_mm("+a+");\n"}return c};
Blockly.Firebird.position_turn=function(a){var b=a.getFieldValue("forward"),c;a=Blockly.Firebird.valueToCode(a,"motion",Blockly.Firebird.ORDER_MULTIPLICATIVE)||"0";switch(b){case "left":c="left_degrees("+a+");\n";break;case "right":c="right_degrees("+a+");\n"}return c};
Blockly.Firebird.position_turn_soft=function(a){var b=a.getFieldValue("forward"),c;a=Blockly.Firebird.valueToCode(a,"soft_turn",Blockly.Firebird.ORDER_MULTIPLICATIVE)||"0";switch(b){case "left":c="soft_left_degrees("+a+");\n";break;case "right":c="soft_right_degrees("+a+");\n"}return c};
Blockly.Firebird.position_turn_back=function(a){var b=a.getFieldValue("forward"),c;a=Blockly.Firebird.valueToCode(a,"back_turn",Blockly.Firebird.ORDER_MULTIPLICATIVE)||"0";switch(b){case "left":c="soft_left_2_degrees("+a+");\n";break;case "right":c="soft_right_2_degrees("+a+");\n"}return c};
// Copyright 2014 Google Inc.  Apache License 2.0
Blockly.Firebird.procedures={};
Blockly.Firebird.procedures_defreturn=function(a){var b=Blockly.Firebird.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=Blockly.Firebird.statementToCode(a,"STACK");Blockly.Firebird.STATEMENT_PREFIX&&(c=Blockly.Firebird.prefixLines(Blockly.Firebird.STATEMENT_PREFIX.replace(/%1/g,"'"+a.id+"'"),Blockly.Firebird.INDENT)+c);Blockly.Firebird.INFINITE_LOOP_TRAP&&(c=Blockly.Firebird.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+a.id+"'")+c);var d=Blockly.Firebird.valueToCode(a,"RETURN",
Blockly.Firebird.ORDER_NONE)||"";d&&(d="  return "+d+";\n");for(var e=d?"dynamic":"void",g=[],f=0;f<a.arguments_.length;f++)g[f]=Blockly.Firebird.variableDB_.getName(a.arguments_[f],Blockly.Variables.NAME_TYPE);c=e+" "+b+"("+g.join(", ")+") {\n"+c+d+"}";c=Blockly.Firebird.scrub_(a,c);Blockly.Firebird.definitions_[b]=c;return null};Blockly.Firebird.procedures_defnoreturn=Blockly.Firebird.procedures_defreturn;
Blockly.Firebird.procedures_callreturn=function(a){for(var b=Blockly.Firebird.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.Firebird.valueToCode(a,"ARG"+d,Blockly.Firebird.ORDER_NONE)||"null";return[b+"("+c.join(", ")+")",Blockly.Firebird.ORDER_UNARY_POSTFIX]};
Blockly.Firebird.procedures_callnoreturn=function(a){for(var b=Blockly.Firebird.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.Firebird.valueToCode(a,"ARG"+d,Blockly.Firebird.ORDER_NONE)||"null";return b+"("+c.join(", ")+");\n"};
Blockly.Firebird.procedures_ifreturn=function(a){var b="if ("+(Blockly.Firebird.valueToCode(a,"CONDITION",Blockly.Firebird.ORDER_NONE)||"false")+") {\n";a.hasReturnValue_?(a=Blockly.Firebird.valueToCode(a,"VALUE",Blockly.Firebird.ORDER_NONE)||"null",b+="  return "+a+";\n"):b+="  return;\n";return b+"}\n"};Blockly.Firebird.sensor={};Blockly.Firebird.sensor_white=function(a){var b;switch(a.getFieldValue("line_sensor")){case "center":b="ADC_Conversion(2)";break;case "left":b="ADC_Conversion(3)";break;case "right":b="ADC_Conversion(1)"}return b};Blockly.Firebird.sensor_sharp=function(a){var b;switch(a.getFieldValue("sharp")){case "fr":b="sharp_fr(11)";break;case "lf":b="sharp_fr(9)";break;case "rf":b="sharp_fr(13)";break;case "ld":b="sharp_fr(10)";break;case "rd":b="sharp_fr(12)"}return b};
Blockly.Firebird.sensor_ir=function(a){return a.getFieldValue("ir")};
// Copyright 2014 Google Inc.  Apache License 2.0
Blockly.Firebird.texts={};Blockly.Firebird.addReservedWords("Html,Math");Blockly.Firebird.text=function(a){return[Blockly.Firebird.quote_(a.getFieldValue("TEXT")),Blockly.Firebird.ORDER_ATOMIC]};
Blockly.Firebird.text_join=function(a){var b;if(0==a.itemCount_)return["''",Blockly.Firebird.ORDER_ATOMIC];if(1==a.itemCount_)b=(Blockly.Firebird.valueToCode(a,"ADD0",Blockly.Firebird.ORDER_UNARY_POSTFIX)||"''")+".toString()";else{b=Array(a.itemCount_);for(var c=0;c<a.itemCount_;c++)b[c]=Blockly.Firebird.valueToCode(a,"ADD"+c,Blockly.Firebird.ORDER_NONE)||"''";b="["+b.join(",")+"].join()"}return[b,Blockly.Firebird.ORDER_UNARY_POSTFIX]};
Blockly.Firebird.text_append=function(a){var b=Blockly.Firebird.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);a=Blockly.Firebird.valueToCode(a,"TEXT",Blockly.Firebird.ORDER_UNARY_POSTFIX)||"''";return b+" = ["+b+", "+a+"].join();\n"};Blockly.Firebird.text_length=function(a){return[(Blockly.Firebird.valueToCode(a,"VALUE",Blockly.Firebird.ORDER_UNARY_POSTFIX)||"''")+".length",Blockly.Firebird.ORDER_UNARY_POSTFIX]};
Blockly.Firebird.text_isEmpty=function(a){return[(Blockly.Firebird.valueToCode(a,"VALUE",Blockly.Firebird.ORDER_UNARY_POSTFIX)||"''")+".isEmpty",Blockly.Firebird.ORDER_UNARY_POSTFIX]};Blockly.Firebird.text_indexOf=function(a){var b="FIRST"==a.getFieldValue("END")?"indexOf":"lastIndexOf",c=Blockly.Firebird.valueToCode(a,"FIND",Blockly.Firebird.ORDER_NONE)||"''";return[(Blockly.Firebird.valueToCode(a,"VALUE",Blockly.Firebird.ORDER_UNARY_POSTFIX)||"''")+"."+b+"("+c+") + 1",Blockly.Firebird.ORDER_UNARY_POSTFIX]};
Blockly.Firebird.text_charAt=function(a){var b=a.getFieldValue("WHERE")||"FROM_START",c=Blockly.Firebird.valueToCode(a,"AT",Blockly.Firebird.ORDER_NONE)||"1";a=Blockly.Firebird.valueToCode(a,"VALUE",Blockly.Firebird.ORDER_UNARY_POSTFIX)||"''";switch(b){case "FIRST":return[a+"[0]",Blockly.Firebird.ORDER_UNARY_POSTFIX];case "FROM_START":return c=c.match(/^-?\d+$/)?parseInt(c,10)-1:c+" - 1",[a+"["+c+"]",Blockly.Firebird.ORDER_UNARY_POSTFIX];case "LAST":c=1;case "FROM_END":return b=Blockly.Firebird.provideFunction_("text_get_from_end",
["String "+Blockly.Firebird.FUNCTION_NAME_PLACEHOLDER_+"(String text, num x) {","  return text[text.length - x];","}"]),[b+"("+a+", "+c+")",Blockly.Firebird.ORDER_UNARY_POSTFIX];case "RANDOM":return Blockly.Firebird.definitions_.import_Firebird_math="import 'Firebird:math' as Math;",b=Blockly.Firebird.provideFunction_("text_random_letter",["String "+Blockly.Firebird.FUNCTION_NAME_PLACEHOLDER_+"(String text) {","  int x = new Math.Random().nextInt(text.length);","  return text[x];","}"]),[b+"("+a+
")",Blockly.Firebird.ORDER_UNARY_POSTFIX]}throw"Unhandled option (text_charAt).";};
Blockly.Firebird.text_getSubstring=function(a){var b=Blockly.Firebird.valueToCode(a,"STRING",Blockly.Firebird.ORDER_UNARY_POSTFIX)||"''",c=a.getFieldValue("WHERE1"),d=a.getFieldValue("WHERE2"),e=Blockly.Firebird.valueToCode(a,"AT1",Blockly.Firebird.ORDER_NONE)||"1";a=Blockly.Firebird.valueToCode(a,"AT2",Blockly.Firebird.ORDER_NONE)||"1";return["FIRST"==c&&"LAST"==d?b:Blockly.Firebird.provideFunction_("text_get_substring",["function "+Blockly.Firebird.FUNCTION_NAME_PLACEHOLDER_+"(text, where1, at1, where2, at2) {",
"  function getAt(where, at) {","    if (where == 'FROM_START') {","      at--;","    } else if (where == 'FROM_END') {","      at = text.length - at;","    } else if (where == 'FIRST') {","      at = 0;","    } else if (where == 'LAST') {","      at = text.length - 1;","    } else {","      throw 'Unhandled option (text_getSubstring).';","    }","    return at;","  }","  at1 = getAt(where1, at1);","  at2 = getAt(where2, at2) + 1;","  return text.substring(at1, at2);","}"])+"("+b+", '"+c+"', "+e+
", '"+d+"', "+a+")",Blockly.Firebird.ORDER_UNARY_POSTFIX]};
Blockly.Firebird.text_changeCase=function(a){var b={UPPERCASE:".toUpperCase()",LOWERCASE:".toLowerCase()",TITLECASE:null}[a.getFieldValue("CASE")];b?(a=Blockly.Firebird.valueToCode(a,"TEXT",Blockly.Firebird.ORDER_UNARY_POSTFIX)||"''",a+=b):(b=Blockly.Firebird.provideFunction_("text_toTitleCase",["String "+Blockly.Firebird.FUNCTION_NAME_PLACEHOLDER_+"(String str) {","  RegExp exp = new RegExp(r'\\b');","  List<String> list = str.split(exp);","  final title = new StringBuffer();","  for (String part in list) {",
"    if (part.length > 0) {","      title.write(part[0].toUpperCase());","      if (part.length > 0) {","        title.write(part.substring(1).toLowerCase());","      }","    }","  }","  return title.toString();","}"]),a=Blockly.Firebird.valueToCode(a,"TEXT",Blockly.Firebird.ORDER_NONE)||"''",a=b+"("+a+")");return[a,Blockly.Firebird.ORDER_UNARY_POSTFIX]};
Blockly.Firebird.text_trim=function(a){var b={LEFT:".replaceFirst(new RegExp(r'^\\s+'), '')",RIGHT:".replaceFirst(new RegExp(r'\\s+$'), '')",BOTH:".trim()"}[a.getFieldValue("MODE")];return[(Blockly.Firebird.valueToCode(a,"TEXT",Blockly.Firebird.ORDER_UNARY_POSTFIX)||"''")+b,Blockly.Firebird.ORDER_UNARY_POSTFIX]};Blockly.Firebird.text_print=function(a){return"print("+(Blockly.Firebird.valueToCode(a,"TEXT",Blockly.Firebird.ORDER_NONE)||"''")+");\n"};
Blockly.Firebird.text_prompt=function(a){Blockly.Firebird.definitions_.import_Firebird_html="import 'Firebird:html' as Html;";var b="Html.window.prompt("+Blockly.Firebird.quote_(a.getFieldValue("TEXT"))+", '')";"NUMBER"==a.getFieldValue("TYPE")&&(Blockly.Firebird.definitions_.import_Firebird_math="import 'Firebird:math' as Math;",b="Math.parseDouble("+b+")");return[b,Blockly.Firebird.ORDER_UNARY_POSTFIX]};
Blockly.Firebird.text_prompt_ext=function(a){Blockly.Firebird.definitions_.import_Firebird_html="import 'Firebird:html' as Html;";var b="Html.window.prompt("+(Blockly.Firebird.valueToCode(a,"TEXT",Blockly.Firebird.ORDER_NONE)||"''")+", '')";"NUMBER"==a.getFieldValue("TYPE")&&(Blockly.Firebird.definitions_.import_Firebird_math="import 'Firebird:math' as Math;",b="Math.parseDouble("+b+")");return[b,Blockly.Firebird.ORDER_UNARY_POSTFIX]};
// Copyright 2014 Google Inc.  Apache License 2.0
Blockly.Firebird.variables={};Blockly.Firebird.variables_get=function(a){return[Blockly.Firebird.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.Firebird.ORDER_ATOMIC]};Blockly.Firebird.variables_set=function(a){var b=Blockly.Firebird.valueToCode(a,"VALUE",Blockly.Firebird.ORDER_ASSIGNMENT)||"0";return Blockly.Firebird.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+" = "+b+";\n"};